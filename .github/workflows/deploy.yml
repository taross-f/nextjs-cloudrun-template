name: Deploy to Cloud Run

on:
  push:
    branches:
      - main # Trigger deployment when merged to main
  pull_request:
    branches:
      - main # Trigger build/test on PRs targeting main

env:
  # TODO: Replace with your GCP Project ID
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  # TODO: Replace with your Artifact Registry repository name
  GAR_REPOSITORY: nextjs-cloudrun-template-repo
  # TODO: Replace with the region of your Artifact Registry repository
  GAR_REGION: us-central1 # Example region
  # TODO: Replace with your Cloud Run service name
  CLOUD_RUN_SERVICE_NAME: nextjs-cloudrun-template-service
  # TODO: Replace with the region of your Cloud Run service
  CLOUD_RUN_REGION: us-central1 # Example region
  # Secret containing the JSON service account key
  GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}

jobs:
  check-changes:
    name: Check Changed Files
    runs-on: ubuntu-latest
    # Only run this job for PRs
    if: github.event_name == 'pull_request'
    outputs:
      skip_build: ${{ steps.filter.outputs.skip_build }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Check for changes outside .devcontainer
        id: filter
        run: |
          # Get list of changed files
          CHANGED_FILES=$(git diff --name-only origin/${{ github.base_ref }} HEAD)
          
          # Check if all changed files are in .devcontainer directory or workflow files
          ONLY_DEVCONTAINER_OR_WORKFLOW=true
          HAS_WORKFLOW_CHANGES=false
          HAS_DEVCONTAINER_CHANGES=false
          
          for file in $CHANGED_FILES; do
            if [[ $file == .devcontainer/* ]]; then
              HAS_DEVCONTAINER_CHANGES=true
            elif [[ $file == .github/workflows/* ]]; then
              HAS_WORKFLOW_CHANGES=true
            else
              ONLY_DEVCONTAINER_OR_WORKFLOW=false
              break
            fi
          done
          
          # Skip build if only DevContainer or workflow files changed
          if [[ "$ONLY_DEVCONTAINER_OR_WORKFLOW" == "true" ]]; then
            SKIP_BUILD=true
          else
            SKIP_BUILD=false
          fi
          
          echo "skip_build=$SKIP_BUILD" >> $GITHUB_OUTPUT
          echo "Changed files: $CHANGED_FILES"
          echo "Only DevContainer or workflow changes: $ONLY_DEVCONTAINER_OR_WORKFLOW"
          echo "Has workflow changes: $HAS_WORKFLOW_CHANGES"
          echo "Has DevContainer changes: $HAS_DEVCONTAINER_CHANGES"
          echo "Skip build: $SKIP_BUILD"

  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    # Skip this job if PR only changes .devcontainer or workflow files
    needs: check-changes
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && needs.check-changes.outputs.skip_build != 'true')
    permissions:
      contents: 'read'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Authenticate to Google Cloud
      if: github.event_name == 'push'
      id: auth
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ env.GCP_SA_KEY }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2

    - name: Authorize Docker push
      if: github.event_name == 'push'
      run: gcloud auth configure-docker ${{ env.GAR_REGION }}-docker.pkg.dev

    - name: Build Docker image
      run: |
        # Use a simple tag for PR builds, full tag for push builds
        if [ "${{ github.event_name }}" == "pull_request" ]; then
          TAG="pr-${{ github.event.number }}-${{ github.sha }}"
        else
          TAG="${{ env.GAR_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.GAR_REPOSITORY }}/${{ env.CLOUD_RUN_SERVICE_NAME }}:${{ github.sha }}"
        fi
        docker build --tag "$TAG" .

    - name: Push Docker image to Artifact Registry
      if: github.event_name == 'push'
      run: |
        docker push "${{ env.GAR_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.GAR_REPOSITORY }}/${{ env.CLOUD_RUN_SERVICE_NAME }}:${{ github.sha }}"

  deploy:
    name: Deploy to Cloud Run
    # Only run deployment on push to main branch
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: build-and-push
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Authenticate to Google Cloud
      if: github.event_name == 'push'
      id: auth
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ env.GCP_SA_KEY }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2

    - name: Deploy to Cloud Run
      id: deploy
      uses: google-github-actions/deploy-cloudrun@v2
      with:
        service: ${{ env.CLOUD_RUN_SERVICE_NAME }}
        region: ${{ env.CLOUD_RUN_REGION }}
        # Use the image pushed in the previous job
        image: ${{ env.GAR_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.GAR_REPOSITORY }}/${{ env.CLOUD_RUN_SERVICE_NAME }}:${{ github.sha }}
        # Optional: set environment variables
        # env_vars: |
        #   KEY1=VALUE1
        #   KEY2=VALUE2
        flags: '--allow-unauthenticated' # Allow public access, adjust as needed

    # If required, output the URL of the deployed service
    - name: Show deployed URL
      run: echo "Deployed to ${{ steps.deploy.outputs.url }}"
